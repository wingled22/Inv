@model IEnumerable<Inv.Models.Product>
@{
    ViewBag.Title = "POS Register";
}
<script id='cartItem' type='text/template'>
    <li>
        <p id="item_id" style="display:none;"></p>
        <div class="item-wrap">
            <div class="quantity-wrap">
                <input type="number" name="Quantity" min="0" value="" />
            </div>
            <div class="info-wrap">
                <p class="item-name">Item 1</p>
                <div><p class="item-qpu">quantity per unit sdfsdfsdf</p></div>
                <p class="item-price">Price: 12.55</p>
            </div>
            <div class="info-total">
                <div>
                    <p><i>Total:</i></p>
                    <h3 class="item-total">202</h3>
                </div>
            </div>
            <div class="remove-item">
                <a class="remove">&times</a>
            </div>
        </div>
    </li>
</script>

<div class="sidebar">
    <div>
        <h3>Orders</h3>
        <hr />
    </div>
    <ul class='cart-items' id="cart-items"></ul>
</div>

<div class="content">
    <div class="col-sm-12" style="">

        <p>
            Search Product: <input type="text" name="prodnametosearch" value="" />
            <input type="submit" value="Search" class="btn btn-primary" />
            <input class="btn btn-primary togglehidden" name="exitsearch" type="submit" value="Exit Search" />
        </p>


        @Html.Partial("_ProductsGridViewCallbackPartial")
    </div>
</div>

<script>
    var carted_prods = [
        {
            itemID: null,
            itemName: null ,
            itemQPU: null,
            itemPrice: null,
            itemQuantity: null
        }
    ];

    $(document).ready(function () {
        var cart = $('.cart-items');
        //calculate the item per total quantity * price
        function calculateSubTotal(quantity, price) {
            return price * quantity;
        }

        //remove an item to the cart
        $(document).delegate('a.remove', 'click', function () {
            let item_id = $(this).closest('li').find('#item_id').text();
            //remove the removed item from the carted_prods json
            carted_prods.forEach(function (element, index) {
                if (parseInt(item_id) == element.itemID) {
                    carted_prods.splice(index, 1);
                }
            });
            pops();
        });

        //populate the cart with items from the cart_prods JSON
        function pops() {
            console.log(carted_prods);
            cart.empty();
            carted_prods.forEach(function (element, index) {
                if (element.itemID != null) {
                    var $template = $($('#cartItem').text());
                    $template.find('p#item_id').text(element.itemID);
                    $template.find('input').val(element.itemQuantity);
                    $template.find('.item-name').text(element.itemName);
                    $template.find('.item-qpu').text(element.itemQPU);
                    $template.find('.item-price').text(element.itemPrice);
                    $template.find('.item-total').text(calculateSubTotal(element.itemQuantity, element.itemPrice));
                    $template.find("#id").text(element.itemID);
                    $("#cart-items").prepend($template);
                }
            });
        }

        //search a product from the product pool
        function searchProduct(searchString) {
            cbProductsGridViewPartial.PerformCallback({ searchString: searchString });

        }

        //the event handler for searchProduct
        $(document).delegate("input[value=Search]", "click", function (event) {
            event.preventDefault();
            searchProduct($('input[name=prodnametosearch]').val());
            $('input[name=exitsearch]').removeClass('togglehidden');

        });

        //exit the search
        $('input[name=exitsearch]').click(function () {
            $('input[name=exitsearch]').toggleClass('togglehidden');
            searchProduct("");

        });

        $(document).delegate("#add-to-cart", "click", function (event) {
            event.preventDefault();
            var selectedItemID = parseInt($(this).closest('tr').find('td.prodid').text().trim());
            var noMatchFound = true;
            $.each(carted_prods, function (index, element) {


                if (element.itemID != selectedItemID) {
                    noMatchFound = true;
                } else {
                    element.itemQuantity = element.itemQuantity + 1;
                    noMatchFound = false;
                    return false;
                }
                
            });

            if (noMatchFound) {
                var newObj = {
                    itemID: parseInt($(this).closest('tr').find('td.prodid').text().trim()),
                    itemName: $(this).closest('tr').find('td.prodname').text().trim(),
                    itemQPU: $(this).closest('tr').find('td.prodqpu').text().trim(),
                    itemPrice: $(this).closest('tr').find('td.prodprice').text().trim(),
                    itemQuantity: 1
                };
                carted_prods.push(newObj);

            }
            pops();
        });

    });

</script>